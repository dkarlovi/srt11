name: Build and Release

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]
    release:
        types: [ published ]

jobs:
    build:
        runs-on: ${{ matrix.os }}
        permissions:
            id-token: write
            contents: read
        strategy:
            matrix:
                os: [ ubuntu-latest, macos-latest, windows-latest ]
        
        steps:
            -   uses: actions/checkout@v4

            -   name: Set up Go
                uses: actions/setup-go@v5
                with:
                    go-version-file: 'go.mod'

            -   name: Set artifact version
                id: vars
                run: |
                    if [[ "${{ github.event_name }}" == "release" ]]; then
                      echo "ARTIFACT_VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
                    elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
                      BRANCH=$(echo "${{ github.head_ref }}" | tr '/' '-')
                      echo "ARTIFACT_VERSION=${BRANCH}" >> $GITHUB_OUTPUT
                    else
                      BRANCH=$(echo "${{ github.ref_name }}" | tr '/' '-')
                      echo "ARTIFACT_VERSION=${BRANCH}" >> $GITHUB_OUTPUT
                    fi
                shell: bash

            -   name: Build
                run: |
                    if [[ "$RUNNER_OS" == "Windows" ]]; then
                      go build -o srt11.exe .
                    else
                      go build -o srt11 .
                    fi
                shell: bash

            -   name: Install zip (Windows)
                if: runner.os == 'Windows'
                run: choco install zip -y
                shell: bash

            -   name: Prepare artifact
                run: |
                    VERSION="${{ steps.vars.outputs.ARTIFACT_VERSION }}"
                    if [[ "$RUNNER_OS" == "Windows" ]]; then
                      zip srt11-${VERSION}-windows.zip srt11.exe
                    elif [[ "$RUNNER_OS" == "macOS" ]]; then
                      zip srt11-${VERSION}-macos.zip srt11
                    else
                      zip srt11-${VERSION}-linux.zip srt11
                    fi
                shell: bash

            -   name: Upload artifact
                uses: actions/upload-artifact@v4
                with:
                    name: srt11-${{ steps.vars.outputs.ARTIFACT_VERSION }}-${{ runner.os }}
                    path: |
                        srt11-*.zip

            -   name: Attest build provenance
                uses: actions/attest-build-provenance@v2
                with:
                    subject-path: srt11-${{ steps.vars.outputs.ARTIFACT_VERSION }}-*.zip

            -   name: Upload to GitHub Release
                if: github.event_name == 'release'
                uses: softprops/action-gh-release@v2
                with:
                    files: srt11-${{ steps.vars.outputs.ARTIFACT_VERSION }}-*.zip
